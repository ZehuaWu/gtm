outx02<-lm(Y~X,data=mondata)
X<-SPREAD03[1:(length(Date)-12)]
Y<-XRET03[13:length(Date)]
outx03<-lm(Y~X,data=mondata)
X<-SPREAD04[1:(length(Date)-12)]
Y<-XRET04[13:length(Date)]
outx04<-lm(Y~X,data=mondata)
X<-SPREAD05[1:(length(Date)-12)]
Y<-XRET05[13:length(Date)]
outx05<-lm(Y~X,data=mondata)
X<-SPREAD06[1:(length(Date)-12)]
Y<-XRET06[13:length(Date)]
outx06<-lm(Y~X,data=mondata)
X<-SPREAD07[1:(length(Date)-12)]
Y<-XRET07[13:length(Date)]
outx07<-lm(Y~X,data=mondata)
attach(mondata)
X<-SPREAD02[1:(length(Date)-12)]
Y<-XRET02[13:length(Date)]
outx02<-lm(Y~X,data=mondata)
X<-SPREAD03[1:(length(Date)-12)]
Y<-XRET03[13:length(Date)]
outx03<-lm(Y~X,data=mondata)
X<-SPREAD04[1:(length(Date)-12)]
Y<-XRET04[13:length(Date)]
outx04<-lm(Y~X,data=mondata)
X<-SPREAD05[1:(length(Date)-12)]
Y<-XRET05[13:length(Date)]
outx05<-lm(Y~X,data=mondata)
X<-SPREAD06[1:(length(Date)-12)]
Y<-XRET06[13:length(Date)]
outx06<-lm(Y~X,data=mondata)
X<-SPREAD07[1:(length(Date)-12)]
Y<-XRET07[13:length(Date)]
outx07<-lm(Y~X,data=mondata)
slopesyc<-c(outx02$coeff[2], outx03$coeff[2], outx04$coeff[2],
outx05$coeff[2], outx06$coeff[2], outx07$coeff[2])
rsquaredyc<-c(summary(outx02)$r.squared, summary(outx03)$r.squared,
summary(outx04)$r.squared, summary(outx05)$r.squared,
summary(outx06)$r.squared, summary(outx07)$r.squared)
knitr::opts_chunk$set(echo = TRUE,
warning=F,
message=F)
rm(list=ls())
library(zoo)
library(ggplot2)
library(xts)
library(lubridate)
library(plyr)
library(forecast)
library(reshape2)
library(stargazer)
setwd("/Users/patrick/Desktop/Econ 406/Data Exercises/Week 2")
data<-read.csv("feds200628.csv")
#data<-na.omit(data)
colnames(data)[1]<-"Date"
Date<-as.Date(data$Date, format="%Y-%m-%d")
data$Date<-Date
data$Day<-day(data$Date)
data$Month<-month(data$Date)
n<-length(data$Month)
mondata<-data[which(data$Month[2:n]!=data$Month[1:n-1]), ]
mondata<-mondata[seq(dim(mondata)[1],1),]
rm(data)
rm(Date)
attach(mondata)
mondata$SPREAD02 <- 2*SVENY02-SVENY01-SVENY01
mondata$SPREAD03 <- 3*SVENY03-2*SVENY02-SVENY01
mondata$SPREAD04 <- 4*SVENY04-3*SVENY03-SVENY01
mondata$SPREAD05 <- 5*SVENY05-4*SVENY04-SVENY01
mondata$SPREAD06 <- 6*SVENY06-5*SVENY05-SVENY01
mondata$SPREAD07 <- 7*SVENY07-6*SVENY06-SVENY01
attach(mondata)
xx<-rep(NA, 12)
mondata$RET01<-append(xx, SVENY01[1:(length(Date)-12)], after=length(xx))
mondata$RET02<-append(xx, 2*SVENY02[1:(length(Date)-12)]-1*SVENY01[13:length(Date)], after=length(xx))
mondata$RET03<-append(xx, 3*SVENY03[1:(length(Date)-12)]-2*SVENY02[13:length(Date)], after=length(xx))
mondata$RET04<-append(xx, 4*SVENY04[1:(length(Date)-12)]-3*SVENY03[13:length(Date)], after=length(xx))
mondata$RET05<-append(xx, 5*SVENY05[1:(length(Date)-12)]-4*SVENY04[13:length(Date)], after=length(xx))
mondata$RET06<-append(xx, 6*SVENY06[1:(length(Date)-12)]-5*SVENY05[13:length(Date)], after=length(xx))
mondata$RET07<-append(xx, 7*SVENY07[1:(length(Date)-12)]-6*SVENY06[13:length(Date)], after=length(xx))
mondata$RET10<-append(xx, 10*SVENY10[1:(length(Date)-12)]-9*SVENY09[13:length(Date)], after=length(xx))
mondata$RET20<-append(xx, 20*SVENY20[1:(length(Date)-12)]-19*SVENY19[13:length(Date)], after=length(xx))
mondata$RET30<-append(xx, 30*SVENY30[1:(length(Date)-12)]-29*SVENY29[13:length(Date)], after=length(xx))
attach(mondata)
mondata$XRET02<-RET02-RET01
mondata$XRET03<-RET03-RET01
mondata$XRET04<-RET04-RET01
mondata$XRET05<-RET05-RET01
mondata$XRET06<-RET06-RET01
mondata$XRET07<-RET07-RET01
mondata$XRET10<-RET10-RET01
mondata$XRET20<-RET20-RET01
mondata$XRET30<-RET30-RET01
attach(mondata)
barC = vector()
cx = seq(from=1, to=7, by=1)
barC[1]<- mean(SVENY01,trim=0,na.rm=TRUE)
barC[2]<- mean(SVENY02-SVENY01,trim=0,na.rm=TRUE)
barC[3]<- mean(SVENY03-SVENY01,trim=0,na.rm=TRUE)
barC[4]<- mean(SVENY04-SVENY01,trim=0,na.rm=TRUE)
barC[5]<- mean(SVENY05-SVENY01,trim=0,na.rm=TRUE)
barC[6]<- mean(SVENY06-SVENY01,trim=0,na.rm=TRUE)
barC[7]<- mean(SVENY07-SVENY01,trim=0,na.rm=TRUE)
attach(mondata)
barD = vector()
barD[1]<- 0
barD[2]<- 2*barC[2]
barD[3]<- 3*barC[3] - 2*barC[2]
barD[4]<- 4*barC[4] - 3*barC[3]
barD[5]<- 5*barC[5] - 4*barC[4]
barD[6]<- 6*barC[6] - 5*barC[5]
barD[7]<- 7*barC[7] - 6*barC[6]
attach(mondata)
X<-SVENY01[1:(length(Date)-1)]-barC[1]
Y<-SVENY01[2:length(Date)]- barC[1]
outm<-lm(Y~X,data=mondata)
rhom<-outm$coeff[2]^12
plot(Date,rhom^0*(SVENY01-barC[1])+barC[1],type='l',col='black',
main='Yield Forecasts from AR(1) Level Yield Dynamics',
xlab="Dates", ylab="Forecast of Yield")
lines(Date,rhom^1*(SVENY01-barC[1])+barC[1],type='l',col='blue')
lines(Date,rhom^2*(SVENY01-barC[1])+barC[1],type='l',col='brown')
lines(Date,rhom^3*(SVENY01-barC[1])+barC[1],type='l',col='green')
lines(Date,rhom^4*(SVENY01-barC[1])+barC[1],type='l',col='red')
lines(Date,rhom^5*(SVENY01-barC[1])+barC[1],type='l',col='yellow')
lines(Date,rhom^6*(SVENY01-barC[1])+barC[1],type='l',col='sienna')
lines(Date,rhom^9*(SVENY01-barC[1])+barC[1],type='l',col='orange')
lines(Date,rhom^19*(SVENY01-barC[1])+barC[1],type='l',col='dark salmon')
lines(Date,rhom^29*(SVENY01-barC[1])+barC[1],type='l',col='black')
lines(Date,rhom^100*(SVENY01-barC[1])+barC[1],type='l',col='black')
attach(mondata)
X<-SVENY01[2:(length(Date)-1)]-SVENY01[1:(length(Date)-2)]
Y<-SVENY01[3:(length(Date))]-SVENY01[2:(length(Date)-1)]
outdm<-lm(Y~X,data=mondata)
betadm<-outdm$coeff[2]
alphadm<-outdm$coeff[1]
plot(Date[2:(length(Date)-1)],SVENY01[2:(length(Date)-1)],
type='l',col='black', xlab='dates',ylab='forecast of yield',
main='Yield Forecasts from AR(1) First Difference Yield Dynamics')
lines(Date[2:(length(Date)-1)],SVENY01[2:(length(Date)-1)]+12*1*alphadm+(1-betadm^(12*1+1))/(1-betadm)*X,
type='l',col='blue')
lines(Date[2:(length(Date)-1)],SVENY01[2:(length(Date)-1)]+12*2*alphadm+(1-betadm^(12*2+1))/(1-betadm)*X,
type='l',col='brown')
lines(Date[2:(length(Date)-1)],SVENY01[2:(length(Date)-1)]+12*3*alphadm+(1-betadm^(12*3+1))/(1-betadm)*X,
type='l',col='green')
lines(Date[2:(length(Date)-1)],SVENY01[2:(length(Date)-1)]+12*4*alphadm+(1-betadm^(12*4+1))/(1-betadm)*X,
type='l',col='red')
lines(Date[2:(length(Date)-1)],SVENY01[2:(length(Date)-1)]+12*5*alphadm+(1-betadm^(12*5+1))/(1-betadm)*X,
type='l',col='yellow')
lines(Date[2:(length(Date)-1)],SVENY01[2:(length(Date)-1)]+12*6*alphadm+(1-betadm^(12*6+1))/(1-betadm)*X,
type='l',col='sienna')
set.seed(1104)
shocks<-rnorm(length(Date))
x<-zoo(cumsum(shocks), Date)
plot(x, xlab="Time", ylab="Value")
X=x[1:(length(x)-1)]
Y=x[2:length(x)]
outx<-lm(Y~X)
stargazer(outx, header=F, title="OLS Regression")
rhox<-outx$coeff[2]^12
stargazer(rhox, summary=F, title="Slope Coefficient")
attach(mondata)
plot(Date,SVENY01,type='l',col='black', xlab='dates',ylab='forecast of yield',
main='Yield Forecasts from Forward Rates Out 1 - 7 Years')
lines(Date,2*SVENY02-SVENY01-barD[2],type='l',col='blue')
lines(Date,3*SVENY03-2*SVENY02-barD[3],type='l',col='brown')
lines(Date,4*SVENY04-3*SVENY03-barD[4],type='l',col='green')
lines(Date,5*SVENY05-4*SVENY04-barD[5],type='l',col='red')
lines(Date,6*SVENY06-5*SVENY05-barD[6],type='l',col='yellow')
lines(Date,7*SVENY07-6*SVENY06-barD[7],type='l',col='sienna')
lines(Date,rhom^100*(SVENY01-barC[1])+barC[1],type='l',col='black')
attach(mondata)
X<-SPREAD02[1:(length(Date)-12)]
Y<-SVENY01[13:(length(Date))]-SVENY01[1:(length(Date)-12)]
outy02<-lm(Y~X,data=mondata)
X<-SPREAD03[1:(length(Date)-2*12)]
Y<-SVENY01[(2*12+1):(length(Date))]-SVENY01[1:(length(Date)-(2*12))]
outy03<-lm(Y~X,data=mondata)
X<-SPREAD04[1:(length(Date)-3*12)]
Y<-SVENY01[(3*12+1):(length(Date))]-SVENY01[1:(length(Date)-(3*12))]
outy04<-lm(Y~X,data=mondata)
X<-SPREAD05[1:(length(Date)-4*12)]
Y<-SVENY01[(4*12+1):(length(Date))]-SVENY01[1:(length(Date)-(4*12))]
outy05<-lm(Y~X,data=mondata)
X<-SPREAD06[1:(length(Date)-5*12)]
Y<-SVENY01[(5*12+1):(length(Date))]-SVENY01[1:(length(Date)-(5*12))]
outy06<-lm(Y~X,data=mondata)
X<-SPREAD07[1:(length(Date)-6*12)]
Y<-SVENY01[(6*12+1):(length(Date))]-SVENY01[1:(length(Date)-(6*12))]
outy07<-lm(Y~X,data=mondata)
slopesyc<-c(outy02$coeff[2], outy03$coeff[2], outy04$coeff[2],
outy05$coeff[2], outy06$coeff[2], outy07$coeff[2])
rsquaredyc<-c(summary(outy02)$r.squared, summary(outy03)$r.squared,
summary(outy04)$r.squared, summary(outy05)$r.squared,
summary(outy06)$r.squared, summary(outy07)$r.squared)
attach(mondata)
X<-SPREAD02[1:(length(Date)-12)]
Y<-XRET02[13:length(Date)]
outx02<-lm(Y~X,data=mondata)
X<-SPREAD03[1:(length(Date)-12)]
Y<-XRET03[13:length(Date)]
outx03<-lm(Y~X,data=mondata)
X<-SPREAD04[1:(length(Date)-12)]
Y<-XRET04[13:length(Date)]
outx04<-lm(Y~X,data=mondata)
X<-SPREAD05[1:(length(Date)-12)]
Y<-XRET05[13:length(Date)]
outx05<-lm(Y~X,data=mondata)
X<-SPREAD06[1:(length(Date)-12)]
Y<-XRET06[13:length(Date)]
outx06<-lm(Y~X,data=mondata)
X<-SPREAD07[1:(length(Date)-12)]
Y<-XRET07[13:length(Date)]
outx07<-lm(Y~X,data=mondata)
slopesxr<-c(outx02$coeff[2], outx03$coeff[2], outx04$coeff[2],
outx05$coeff[2], outx06$coeff[2], outx07$coeff[2])
rsquaredxr<-c(summary(outx02)$r.squared, summary(outx03)$r.squared,
summary(outx04)$r.squared, summary(outx05)$r.squared,
summary(outx06)$r.squared, summary(outx07)$r.squared)
horizon<-seq(from=2, to=7, by=1)
table<-data.frame(Horizon=horizon, Slope.Yield.Change=slopesyc,
Rsquared.Yield.Change=rsquaredyc,
Slope.Excess.Returns=slopesxr,
RSquared.Excess.Returns=rsquaredxr)
stargazer(table, header=F, summary=F, title="Results")
horizon<-seq(from=2, to=7, by=1)
table<-data.frame(Horizon=horizon, Slope.Yield.Change=slopesyc,
Rsquared.Yield.Change=rsquaredyc,
Slope.Excess.Returns=slopesxr,
RSquared.Excess.Returns=rsquaredxr)
rownames(table)<-NULL
stargazer(table, header=F, summary=F, title="Results")
horizon<-seq(from=2, to=7, by=1)
table<-data.frame(Horizon=horizon, Slope.Yield.Change=slopesyc,
Rsquared.Yield.Change=rsquaredyc,
Slope.Excess.Returns=slopesxr,
RSquared.Excess.Returns=rsquaredxr)
rownames(table)<-NULL
stargazer(table, header=F, summary=F, title="Results",
rownames = F)
DMW<-vector()
as.numeric(1L)
library(gtm)
1==1L
library(gtm)
library(gtm)
library(gtm)
library(gtm)
library(gtm)
library(gtm)
library(gtm)
library(gtm)
?maeforecast
library(gtm)
library(dtwclust)
?tsclust
library(gtm)
library(dynfacto)
library(dynfactoR)
?dfm
setwd("~/Desktop/MAE_Lab/R_Packages/gtm/man")
library(gtm)
capitalize("recursive")
library(gtm)
?pnorm
model="ar"
model<-paste("Bagging.", model, sep="")
model
?Bagging
library(gtm)
library(gtm)
library(gtm)
library(gtm)
summary.lm
?plot.Maeforecast
?round
?plot.Maeforecast
library(gtm)
library(gtm)
?return
?coeftest
?maeforecast
?df,rm
?df.rm
library(gtm)
?Arima
library(gtm)
library(gtm)
library(gtm)
library(gtm)
library(gtm)
load("~/Desktop/MAE_Lab/Projects/Google_Trends/Results/USD-AUS.RData")
load("~/Desktop/MAE_Lab/Projects/Google_Trends/Results/USD-AUS.RData")
preselection=NULL
print(preselection)
print(preselection)
x<-c(Data=1, w_size=2, window="recursive", t.select=NULL)
print(x)
library(gtm)
Test<-maeforecast(mydata, model="lasso", t.select=50, window="rolling", w_size=60)
summary(Test)
Test1<-maeforecast(mydata, model="lasso", window="rolling", w_size=60)
summary(Tes)
summary(Test)
summary(Test1)
?ifelse
library(gtm)
Test1<-maeforecast(mydata, model="lasso", window="rolling", w_size=60)
summary(Test1)
Test<-maeforecast(mydata, model="lasso", window="rolling", w_size=60, t.select=50)
summary(Test)
Test$Variables
summary(Test)
S<-summary
S(Test)
View(S)
S
rm(S)
Test
All.Ratio
Directional_NW<-function(forecasts=NULL, p=1, weighted=TRUE){
if(class(forecasts)!="Maeforecast"){
stop("Argument forecasts has to be of class 'Maeforecast'.")
}
nw <- function(y,qn){
T <- length(y)
ybar <- rep(1,T) * ((sum(y))/T)
dy <- y-ybar
G0 <- t(dy) %*% dy/T
for (j in 1:qn){
gamma <- t(dy[(j+1):T]) %*% dy[1:T-j]/T
G0 <- G0+(gamma+t(gamma))*(1-abs(j/(qn+1)))
}
return(as.numeric(G0))
}
if(weighted){
weighted.dir<-forecasts$Forecasts$Forecasted_Direction*forecasts$Forecasts$Realized
P <- length(weighted.dir)
varfroll.adj <- nw(y=weighted.dir, qn=p)
CW <- sqrt(P)*(mean(weighted.dir))/sqrt(varfroll.adj)
pv <- 2*pnorm(-abs(CW),0,1)
results=list(test.statistic=CW, pvalue=pv)
}else{
For<-forecasts$Forecasts$Forecasted_Direction-mean(forecasts$Forecasts$Forecasted_Direction)
True<-forecasts$Forecasts$True_Direction-mean(forecasts$Forecasts$True_Direction)
unweighted.dir<-For*True
P<-length(unweighted.dir)
varfroll.adj<-nw(y=unweighted.dir, qn=p)
CW<-sqrt(P)*(mean(unweighted.dir))/sqrt(varfroll.adj)
pv<-1-pnorm(CW,0,1)
results=list(test.statistic=CW, pvalue=pv)
}
return(results)
}
Directional_NW(rf.for3)
summary(rf.for3)
summary(rf.for)
Directional_NW(rf.for)
rm(Directional_NW())
rm(Directional_NW)
Directional_NW(rf.for)
Directional_NW<-function(forecasts=NULL, p=1, weighted=TRUE){
if(class(forecasts)!="Maeforecast"){
stop("Argument forecasts has to be of class 'Maeforecast'.")
}
nw <- function(y,qn){
T <- length(y)
ybar <- rep(1,T) * ((sum(y))/T)
dy <- y-ybar
G0 <- t(dy) %*% dy/T
for (j in 1:qn){
gamma <- t(dy[(j+1):T]) %*% dy[1:T-j]/T
G0 <- G0+(gamma+t(gamma))*(1-abs(j/(qn+1)))
}
return(as.numeric(G0))
}
if(weighted){
weighted.dir<-forecasts$Forecasts$Forecasted_Direction*forecasts$Forecasts$Realized
P <- length(weighted.dir)
varfroll.adj <- nw(y=weighted.dir, qn=p)
CW <- sqrt(P)*(mean(weighted.dir))/sqrt(varfroll.adj)
pv <- 2*pnorm(abs(CW),0,1, lower.tail=F)
results=list(test.statistic=CW, pvalue=pv)
}else{
For<-forecasts$Forecasts$Forecasted_Direction-mean(forecasts$Forecasts$Forecasted_Direction)
True<-forecasts$Forecasts$True_Direction-mean(forecasts$Forecasts$True_Direction)
unweighted.dir<-For*True
P<-length(unweighted.dir)
varfroll.adj<-nw(y=unweighted.dir, qn=p)
CW<-sqrt(P)*(mean(unweighted.dir))/sqrt(varfroll.adj)
pv<-1-pnorm(CW,0,1)
results=list(test.statistic=CW, pvalue=pv)
}
return(results)
}
Directional_NW(rf.for)
Directional_NW<-function(forecasts=NULL, p=1, weighted=TRUE){
if(class(forecasts)!="Maeforecast"){
stop("Argument forecasts has to be of class 'Maeforecast'.")
}
nw <- function(y,qn){
T <- length(y)
ybar <- rep(1,T) * ((sum(y))/T)
dy <- y-ybar
G0 <- t(dy) %*% dy/T
return(as.numeric(G0))
}
if(weighted){
weighted.dir<-forecasts$Forecasts$Forecasted_Direction*forecasts$Forecasts$Realized
P <- length(weighted.dir)
varfroll.adj <- nw(y=weighted.dir, qn=p)
CW <- sqrt(P)*(mean(weighted.dir))/sqrt(varfroll.adj)
pv <- 2*pnorm(abs(CW),0,1, lower.tail=F)
results=list(test.statistic=CW, pvalue=pv)
}else{
For<-forecasts$Forecasts$Forecasted_Direction-mean(forecasts$Forecasts$Forecasted_Direction)
True<-forecasts$Forecasts$True_Direction-mean(forecasts$Forecasts$True_Direction)
unweighted.dir<-For*True
P<-length(unweighted.dir)
varfroll.adj<-nw(y=unweighted.dir, qn=p)
CW<-sqrt(P)*(mean(unweighted.dir))/sqrt(varfroll.adj)
pv<-1-pnorm(CW,0,1)
results=list(test.statistic=CW, pvalue=pv)
}
return(results)
}
Directional_NW(rf.for)
Directional_NW(rf.for3, p=3)
Directional_NW(rf.for6, p=6)
Directional_NW(rf.for6, p=1)
rm(Directional_NW())
rm(Directional_NW)
Directional_NW(rf.for6, p=1)
Directional_NW(rf.for6, p=6)
Directional_NW(rf.for6, p=3)
Directional_NW(rf.for6, p=0)
Directional_NW(rf.for6, p=2)
Directional_NW<-function(forecasts=NULL, p=1, weighted=TRUE){
if(class(forecasts)!="Maeforecast"){
stop("Argument forecasts has to be of class 'Maeforecast'.")
}
nw <- function(y,qn){
T <- length(y)
ybar <- rep(1,T) * ((sum(y))/T)
dy <- y-ybar
G0 <- t(dy) %*% dy/T
for (j in 1:qn){
gamma <- t(dy[(j+1):T]) %*% dy[1:(T-j)]/T
G0 <- G0+(gamma+t(gamma))*(1-abs(j/(qn+1)))
}
return(as.numeric(G0))
}
if(weighted){
weighted.dir<-forecasts$Forecasts$Forecasted_Direction*forecasts$Forecasts$Realized
P <- length(weighted.dir)
varfroll.adj <- nw(y=weighted.dir, qn=p)
CW <- sqrt(P)*(mean(weighted.dir))/sqrt(varfroll.adj)
pv <- 1-pnorm(CW,0,1)
results=list(test.statistic=CW, pvalue=pv)
}else{
For<-forecasts$Forecasts$Forecasted_Direction-mean(forecasts$Forecasts$Forecasted_Direction)
True<-forecasts$Forecasts$True_Direction-mean(forecasts$Forecasts$True_Direction)
unweighted.dir<-For*True
P<-length(unweighted.dir)
varfroll.adj<-nw(y=unweighted.dir, qn=p)
CW<-sqrt(P)*(mean(unweighted.dir))/sqrt(varfroll.adj)
pv<-1-pnorm(CW,0,1)
results=list(test.statistic=CW, pvalue=pv)
}
return(results)
}
Directional_NW(rf.for6, p=2)
Directional_NW(rf.for6, p=6)
Directional_NW(rf.for6, p=0)
Directional_NW(rf.for6, p=3)
summary(rf.for6)
summary(rf.for12)
summary(rf.for12, p=12)
Directional_NW(rf.for12, p=12)
Directional_NW(dfm.for12, p=12)
Directional_NW(dfm.for12, p=0)
Directional_NW(dfm.for12, p=0, F)
Directional_NW(dfm.for12, p=12, F)
library(gtm)
rf.for3$Forecasts$Realized
library(gtm)
library(gtm)
view(alasso.for3$Forecasts)
View(alasso.for3$Forecasts)
sign(NA)
sign(NA)==sign(NA)
?cumsum
Test<-vector()
Test[1:2]<-NA
Test
Test<-c(1,2,3,4,5,6)
cumsum(Test[1:3])
cumsum(Test[1:3])[3]
cumsum(Test[2:4])[3]
library(gtm)
?forecast::dm.test
library(gtm)
library(gtm)
(2-0.257+(0.175/1.04))/1.8
(2-0.253+(0.175/1.04))/1.8
(2+(0.175/1.04))/1.8
library(gtm)
library(gtm)
library(gtm)
library(gtm)
library(gtm)
